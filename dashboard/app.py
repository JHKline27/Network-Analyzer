import streamlit as st
from analyzer.capture import capture  # Your existing capture function
from analyzer.store import save_to_csv  # For saving packet data
from analyzer.visualize import *  # Import visualization methods
import threading
from scapy.all import get_if_list



st.title('Network Traffic Analyzer')
st.subheader('Capture and Analyze Network Traffic')

interfaces = get_if_list()  # Get network interfaces
selected_interface = st.sidebar.selectbox("Choose an interface", interfaces)

if st.sidebar.button('Start Capture'):
    # Start packet capturing in a new thread
    st.write(f"Starting capture on: {selected_interface}")
    threading.Thread(target=capture, args=(selected_interface, save_to_csv), daemon=True).start()

if st.sidebar.button('Stop Capture'):
    # Logic to stop capture (you may need to add a method to stop the capturing process)
    st.write(f"Stopping capture on: {selected_interface}")

    st.subheader("Captured Packets")
# Read the CSV file generated by the capture and display it
try:
    df = pd.read_csv('data/captured_packets.csv')
    st.write(df)
except FileNotFoundError:
    st.write("No packets captured yet.")



st.sidebar.header("Analytics and Visualization")

# Checkboxes for different types of visualization
if st.sidebar.checkbox("Protocol Distribution"):
    st.subheader("Protocol Distribution")
    plot_protocol_distribution()  # This will call your function to plot and show in Streamlit

if st.sidebar.checkbox("Packet Size Distribution"):
    st.subheader("Packet Size Distribution")
    plot_packet_size_distribution()

if st.sidebar.checkbox("Packet Frequency Over Time"):
    st.subheader("Packet Frequency Over Time")
    plot_packet_frequency_over_time()

if st.sidebar.checkbox("Top Source IP Addresses"):
    st.subheader("Top Source IP Addresses")
    plot_top_ip_addresses()





